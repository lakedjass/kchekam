---
# tasks file for default
- name: Update package system
  ansible.builtin.apt:
    update_cache: true
  become: true

- name: Install Python3 And Pip3
  ansible.builtin.apt:
    name: "{{ item }}"
    state: present
  loop:
    - git
    - python3-dev
    - python3-pip
    - libffi-dev
    - gcc
    - libssl-dev
    - python3-venv
  become: true

- name: Install bottle python package
  ansible.builtin.pip:
    name: virtualenv


- name: Install bottle python package
  ansible.builtin.pip:
    name: pip
    state: latest
    virtualenv: /kolla/venv
  become: true


- name: Install bottle python package
  ansible.builtin.pip:
    name: ansible-core>=2.16,<2.17
    virtualenv: /kolla/venv

- name: Install openstack kolla cli
  ansible.builtin.pip:
    name: git+https://opendev.org/openstack/kolla-ansible@master
    virtualenv: /kolla/venv

- name: Create a directory if it does not exist
  ansible.builtin.file:
    path: /etc/kolla
    state: directory
    owner: ubuntu
    group: ubuntu
    mode: '0755'
  become: true

- name: Create a directory if it does not exist
  ansible.builtin.file:
    path: /home/ubuntu/kolla-ansible/
    state: directory
    owner: ubuntu
    group: ubuntu
    mode: '0755'

- name: Copy folder 
  ansible.builtin.copy:
    src: /kolla/venv/share/kolla-ansible/etc_examples/kolla/
    dest: /etc/kolla
    remote_src: yes

- name: Copy folder 
  ansible.builtin.copy:
    src: "/kolla/venv/share/kolla-ansible/ansible/inventory/{{ item }}"
    dest: /home/ubuntu/kolla-ansible/
    remote_src: yes
  loop: 
    - all-in-one
    - multinode


# You can use shell to run other executables to perform actions inline
- name: Run a script
  ansible.builtin.shell: |
        source /kolla/venv/bin/activate
        kolla-ansible install-deps
        kolla-genpwd
  args:
    executable: /bin/bash

- name: Run a script
  ansible.builtin.shell: |
        echo "configfs" >> /etc/modules
        sudo update-initramfs -u
        #sudo systemctl status open-iscsi
        sudo systemctl stop open-iscsi
        cat <(sudo crontab -l) <(echo "@reboot mount -t configfs /etc/rc.local /sys/kernel/config") | sudo crontab -
  args:
    executable: /bin/bash
  become: true